<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Animated Spreadsheet</title>
  <style>
    :root {
      --item-height: 50px;
      --item-width: 800px;
      --animation-duration: 0.5s;
    }

    .list-container {
      position: relative;
      height: calc(var(--item-height) * 7);
      width: var(--item-width);
      margin: 20px auto;
      overflow: hidden;
    }

    .list-item {
      position: absolute;
      height: var(--item-height);
      width: 100%;
      transition: all var(--animation-duration) ease;
      display: flex;
      align-items: center;
      justify-content: space-between;
      font-size: 16px;
    }

    .list-item td {
      padding: 0 10px;
      text-align: center;
    }
  </style>
</head>
<body>
  <button id="animate-btn">Animate</button>
  <div id="list-container" class="list-container"></div>

  <script>
    const listContainer = document.getElementById('list-container');
    const animateBtn = document.getElementById('animate-btn');
    const itemHeight = parseInt(getComputedStyle(document.documentElement).getPropertyValue('--item-height'));

    const items = Array.from({length: 9}, (_, i) => 
      Array.from({length: 8}, (_, j) => `Num${(i+1)*10 + (j+1)}`)
    );
    let currentIndex = 0;
    let isAnimating = false;
function createListItems() {
  for (let i = 0; i < 7; i++) {
    const item = document.createElement('table');
    item.className = 'list-item';
    item.style.top = `${i * itemHeight}px`;
    item.style.opacity = i === 2 || i === 4 ? 0.5 : i === 3 ? 1 : i === 1 || i === 5 ? 0.25 : 0;
    const row = item.insertRow();
    for (let j = 0; j < 8; j++) {
      row.insertCell();
    }
    listContainer.appendChild(item);
  }
  updateListItems();
}
    

    function updateListItems() {
      const listItems = document.querySelectorAll('.list-item');
      listItems.forEach((item, index) => {
        const cells = item.getElementsByTagName('td');
        const rowData = items[(currentIndex + index) % items.length];
        for (let i = 0; i < cells.length; i++) {
          cells[i].textContent = rowData[i];
        }
      });
    }
    function animateList() {
      if (isAnimating) return;
      isAnimating = true;

      const listItems = document.querySelectorAll('.list-item');
      listItems.forEach((item, index) => {
        item.style.top = `${(index - 1) * itemHeight}px`;
        item.style.opacity = index === 4 ? 1 : index === 3 || index === 5 ? 0.5 : index === 2 || index === 6 ? 0.25 : 0;
      });

      setTimeout(() => {
        currentIndex = (currentIndex + 1) % items.length;
        updateListItems();
        listItems.forEach((item, index) => {
          item.style.transition = 'none';
          item.style.top = `${index * itemHeight}px`;
          item.style.opacity = index === 3 ? 1 : index === 2 || index === 4 ? 0.5 : index === 1 || index === 5 ? 0.25 : 0;
        });
        setTimeout(() => {
          listItems.forEach(item => item.style.transition = '');
          isAnimating = false;
        }, 50);
      }, parseFloat(getComputedStyle(document.documentElement).getPropertyValue('--animation-duration')) * 1000);
    }

    createListItems();
    animateBtn.addEventListener('click', animateList);
  </script>
</body>
</html>